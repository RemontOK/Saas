// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã users
import { supabase } from '../lib/supabase'

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ users –∏ –µ—Å—Ç—å –ª–∏ –≤ –Ω–µ–π –∑–∞–ø–∏—Å–∏
export const checkUsersTableStatus = async () => {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–∞–±–ª–∏—Ü—ã users...')
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
    const { data: usersData, error: usersError } = await supabase
      .from('users')
      .select('id, email, name, plan, created_at')
      .limit(5)
    
    if (usersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ users:', usersError)
      return {
        success: false,
        error: usersError.message,
        message: '‚ùå –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        tableExists: false
      }
    }
    
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –¥–æ—Å—Ç—É–ø–Ω–∞')
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: { user }, error: userError } = await supabase.auth.getUser()
    
    if (userError || !user) {
      return {
        success: true,
        tableExists: true,
        usersCount: usersData?.length || 0,
        message: '‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω',
        currentUser: null
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users
    const currentUserInTable = usersData?.find((u: any) => u.id === user.id)
    
    return {
      success: true,
      tableExists: true,
      usersCount: usersData?.length || 0,
      currentUser: {
        id: user.id,
        email: user.email,
        inTable: !!currentUserInTable,
        tableData: currentUserInTable
      },
      message: currentUserInTable 
        ? '‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞'
        : '‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ users —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –≤–∞—à–µ–π –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç'
    }
  } catch (error: any) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã users',
      tableExists: false
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users
export const createUserInTable = async () => {
  try {
    console.log('üîß –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users...')
    
    const { data: { user }, error: userError } = await supabase.auth.getUser()
    
    if (userError || !user) {
      return {
        success: false,
        error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω',
        message: '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data, error } = await supabase
      .from('users')
      .insert([{
        id: user.id,
        email: user.email,
        name: user.user_metadata?.name || '',
        company: user.user_metadata?.company || '',
        phone: user.user_metadata?.phone || '',
        plan: user.user_metadata?.plan || 'Starter'
      }])
      .select()
      .single()
    
    if (error) {
      if (error.code === '23505' || error.message.includes('duplicate key')) {
        return {
          success: true,
          message: '‚ÑπÔ∏è –ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ users'
        }
      }
      
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏:', error)
      return {
        success: false,
        error: error.message,
        message: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
      }
    }
    
    console.log('‚úÖ –ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω–∞:', data)
    return {
      success: true,
      data,
      message: '‚úÖ –ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ users'
    }
  } catch (error: any) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    }
  }
}

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
export const getTableFixInstructions = () => {
  return {
    success: true,
    message: `üîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ –¢–ê–ë–õ–ò–¶–´ USERS:

1. üìä –ü–†–û–í–ï–†–¨–¢–ï –°–¢–ê–¢–£–°:
   - –ù–∞–∂–º–∏—Ç–µ "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É users"
   - –£–∑–Ω–∞–π—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –∏ –µ—Å—Ç—å –ª–∏ –≤–∞—à–∞ –∑–∞–ø–∏—Å—å

2. üöÄ –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï (SQL):
   - –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor
   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞ check-users-table.sql
   - –≠—Ç–æ —Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—É –∏ –ø–µ—Ä–µ–Ω–µ—Å–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

3. üîß –°–û–ó–î–ê–¢–¨ –ó–ê–ü–ò–°–¨ –í–†–£–ß–ù–£–Æ:
   - –ù–∞–∂–º–∏—Ç–µ "üîß –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
   - –°–∏—Å—Ç–µ–º–∞ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –≤–∞—à—É –∑–∞–ø–∏—Å—å

4. ‚úÖ –ü–†–û–í–ï–†–¨–¢–ï –†–ï–ó–£–õ–¨–¢–ê–¢:
   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è

5. üìã –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê:
   - –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞ fix-users-table.sql

üéâ –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–∏—Ö —à–∞–≥–æ–≤ —Ç–∞–±–ª–∏—Ü–∞ users –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!`
  }
}
