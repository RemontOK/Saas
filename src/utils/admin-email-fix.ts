import { createClient } from '@supabase/supabase-js'

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å service role key –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
const supabaseAdmin = createClient(
  'https://nvidqslpfgvqonrpfdzh.supabase.co',
  'sb_secret_PEzANJ1E4puMP6_POZpnqQ_bQ6IK02z',
  {
    auth: {
      autoRefreshToken: false,
      persistSession: false
    }
  }
)

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const confirmAllUsers = async () => {
  try {
    console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º admin –ø—Ä–∞–≤–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const { data: users, error: fetchError } = await supabaseAdmin.auth.admin.listUsers()
    
    if (fetchError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', fetchError)
      return { 
        success: false, 
        error: fetchError.message,
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
      }
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.users.length}`)
    
    let confirmedCount = 0
    let alreadyConfirmedCount = 0
    
    for (const user of users.users) {
      if (!user.email_confirmed_at) {
        console.log(`üìß –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º email –¥–ª—è: ${user.email}`)
        
        const { error: confirmError } = await supabaseAdmin.auth.admin.updateUserById(
          user.id,
          { email_confirm: true }
        )
        
        if (confirmError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ${user.email}:`, confirmError)
        } else {
          console.log(`‚úÖ Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: ${user.email}`)
          confirmedCount++
        }
      } else {
        alreadyConfirmedCount++
      }
    }
    
    console.log(`üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ ${confirmedCount}, —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ ${alreadyConfirmedCount}`)
    
    return {
      success: true,
      confirmedCount,
      alreadyConfirmedCount,
      totalUsers: users.users.length,
      message: `‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ ${confirmedCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, ${alreadyConfirmedCount} —É–∂–µ –±—ã–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã`
    }
  } catch (error: any) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const disableEmailConfirmation = async () => {
  try {
    console.log('üîß –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    const { error } = await supabaseAdmin.auth.admin.updateUserById(
      'config', // –≠—Ç–æ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é, –Ω–æ –ø–æ–ø—Ä–æ–±—É–µ–º
      { 
        email_confirm: false 
      }
    )
    
    if (error) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ API')
      return {
        success: false,
        message: '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email —á–µ—Ä–µ–∑ API. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Supabase Dashboard.'
      }
    }
    
    return {
      success: true,
      message: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    }
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email'
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const getUserStats = async () => {
  try {
    console.log('üìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
    
    const { data: users, error } = await supabaseAdmin.auth.admin.listUsers()
    
    if (error) {
      return {
        success: false,
        error: error.message,
        message: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
      }
    }
    
    const totalUsers = users.users.length
    const confirmedUsers = users.users.filter(u => u.email_confirmed_at).length
    const unconfirmedUsers = totalUsers - confirmedUsers
    
    return {
      success: true,
      stats: {
        total: totalUsers,
        confirmed: confirmedUsers,
        unconfirmed: unconfirmedUsers
      },
      message: `üìä –í—Å–µ–≥–æ: ${totalUsers}, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: ${confirmedUsers}, –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: ${unconfirmedUsers}`
    }
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    }
  }
}
