// –ü—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å email –±–µ–∑ admin API
import { supabase } from '../lib/supabase'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const checkCurrentUserStatus = async () => {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    
    const { data: { user }, error } = await supabase.auth.getUser()
    
    if (error) {
      return {
        success: false,
        error: error.message,
        message: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
      }
    }
    
    if (!user) {
      return {
        success: false,
        error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω',
        message: '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.'
      }
    }
    
    const confirmed = !!user.email_confirmed_at
    
    return {
      success: true,
      confirmed,
      user: {
        id: user.id,
        email: user.email,
        confirmed_at: user.email_confirmed_at
      },
      message: confirmed 
        ? '‚úÖ Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –ú–æ–∂–µ—Ç–µ –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É.'
        : '‚ùå Email –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ù—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email –¥–ª—è –≤—Ö–æ–¥–∞.'
    }
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
export const sendConfirmationEmail = async () => {
  try {
    console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...')
    
    const { error } = await supabase.auth.resend({
      type: 'signup',
      email: '' // –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω email —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    })
    
    if (error) {
      return {
        success: false,
        error: error.message,
        message: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'
      }
    }
    
    return {
      success: true,
      message: 'üìß –ü–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.'
    }
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —Ä–µ—à–µ–Ω–∏—é
export const getSolutionInstructions = () => {
  return {
    success: true,
    message: `üîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –†–ï–®–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú–´:

1. üìä –ü–†–û–í–ï–†–¨–¢–ï –°–¢–ê–¢–£–°:
   - –ù–∞–∂–º–∏—Ç–µ "‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
   - –£–∑–Ω–∞–π—Ç–µ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –ª–∏ –≤–∞—à email

2. üöÄ –ë–´–°–¢–†–û–ï –†–ï–®–ï–ù–ò–ï (SQL):
   - –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor
   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞ fix-email-confirmation.sql
   - –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

3. üîß –û–¢–ö–õ–Æ–ß–ò–¢–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï:
   - Supabase Dashboard ‚Üí Authentication ‚Üí Settings
   - –û—Ç–∫–ª—é—á–∏—Ç–µ "Enable email confirmations"
   - Save

4. üìß –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê:
   - –ù–∞–∂–º–∏—Ç–µ "üìß –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
   - –°–∏—Å—Ç–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø–∏—Å—å–º–µ

5. ‚úÖ –ü–†–û–í–ï–†–¨–¢–ï –†–ï–ó–£–õ–¨–¢–ê–¢:
   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
   - –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —à–∞–≥–∏

üéâ –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–∏—Ö —à–∞–≥–æ–≤ –ø—Ä–æ–±–ª–µ–º–∞ –±—É–¥–µ—Ç —Ä–µ—à–µ–Ω–∞!`
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞
export const testLogin = async (email: string, password: string) => {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...')
    
    const { data, error } = await supabase.auth.signInWithPassword({
      email,
      password
    })
    
    if (error) {
      return {
        success: false,
        error: error.message,
        message: `‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${error.message}`
      }
    }
    
    return {
      success: true,
      user: data.user,
      message: '‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω! –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞.'
    }
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
    return {
      success: false,
      error: error.message,
      message: 'üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Ö–æ–¥–∞'
    }
  }
}
